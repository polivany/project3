import java.io.FileReader;
import java.util.Scanner;

public class Master {
	static int buttonPressed = 0;

	public static void main(String[] args) throws java.io.IOException {

		FileReader fr = new FileReader("map.txt");// generates new filereader in order to get the map displayed when
													// initialized
		Scanner fileScanner = new Scanner(fr);
		EZImage[] walls = new EZImage[448];// creates an array for the amount of walls created
		int width = fileScanner.nextInt();
		int height = fileScanner.nextInt();
		String inputText;

		int count = 0;// allows a separate counter for amount of walls placed in order to keep the for
						// loop from adding to the same array slots

		EZ.initialize(1600, height * 10 - 10);
		EZImage background = EZ.addImage("pqbg.png", EZ.getWindowWidth() / 2, EZ.getWindowHeight() / 2);
		background.pushToBack();
		for (int row = 0; row < height; row++) {// Builds my map by scanning through each character in my text file.

			inputText = fileScanner.next();

			for (int column = 0; column < width; column++) {

				char wall = inputText.charAt(column);

				if (wall == '#') {
					walls[count] = EZ.addImage("wall.png", column * 10, row * 10);
					count++;
				}
			}

		}
		background.pushToBack();// pushes background to back
		EZ.refreshScreen();// refreshes screen constantly allowing new images and movement "" to be
							// generated
		fileScanner.close();// closes file scanner

		Tree myTree = new Tree(640, 380);// new tree object for visual queues during game

		EZSound GameMusic = EZ.addSound("music.wav");// music used for gameplay
		EZSound Uta = EZ.addSound("TenshiNoUta.wav");// angels singing background for end of game
		/////////////////////////////////////////////////////////////////////////////////
		// Variables needed for potions
		int pBarX = 1352;
		int pBarY = 333;

		int rBarX = 1438;
		int rBarY = 333;

		int gBarX = 1522;
		int gBarY = 333;

		int potNum = 0;
		int gPotNum = 0;
		int pPotNum = 0;
		int rPotNum = 0;
		int hpCollection = 0;

		boolean gameActive = false;// allows game to shuffle through states such as beginning and defeat
		
		int gameSwitch = -1;// variable that switches us between game states
		int musicQ = 0;
		int press = 0;
		///////////////////////////////////////////////////////////////////////////////
		EZImage[] bars = new EZImage[15];

		Sorcerer sorc = new Sorcerer("sorcerer.png", 50, 50, 40, 60, 5, walls, 448);
		Potion pPot = new Potion("purplePotion.png", 360, 360, 1280, 800, walls, 448);
		Potion rPot = new Potion("redPotion.png", 700, 360, 1280, 800, walls, 448);
		Potion gPot = new Potion("greenPotion.png", 640, 700, 1280, 800, walls, 448);

		String[] finalTree = { "tg1.png", "tg2.png", "tg3.png", "tp1.png", "tp2.png", "tp3.png", "tr1.png", "tr2.png",
				"tr3.png" };// string array that allows us to change the tree on display during program

		FinalTree fTree = new FinalTree(finalTree, 1500, 640, 380);// final tree object that allows us to show the
																	// ending tree animation as well as

		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Utility Images
		EZImage end = EZ.addImage("treefinal.png", EZ.getWindowWidth() / 2, EZ.getWindowHeight() / 2);// end screen when
																										// you win
		end.hide();// hides ending screen for later use

		EZImage cont = EZ.addImage("contButt.png", 200, 75);// continue button that directs player to next screen
		cont.hide();// hides button for later use

		EZImage gameOver = EZ.addImage("gameOver.png", EZ.getWindowWidth() / 2, EZ.getWindowHeight() / 2);
		gameOver.hide();

		EZImage intro = EZ.addImage("intro.png", EZ.getWindowWidth() / 2, EZ.getWindowHeight() / 2);
		
		EZImage Title = EZ.addImage("pqtitle.png", EZ.getWindowWidth()/2, 175);

		EZImage directions = EZ.addImage("direct.png", EZ.getWindowWidth() / 2, EZ.getWindowHeight() / 2);
		directions.hide();

		////////////////////////////////////////////////////////////////////////////
		// Dragon Summons
		enemy[] dragon = new enemy[8];

		dragon[0] = new enemy("enemy.png", walls, 448, 320, 200, 55, 54, 1);
		dragon[1] = new enemy("enemy.png", walls, 448, 960, 200, 55, 54, 1);
		dragon[2] = new enemy("enemy.png", walls, 448, 320, 600, 55, 54, 1);
		dragon[3] = new enemy("enemy.png", walls, 448, 960, 600, 55, 54, 1);

		dragon[4] = new enemy("enemy.png", walls, 448, 640, 200, 55, 54, 1);
		dragon[5] = new enemy("enemy.png", walls, 448, 640, 600, 55, 54, 1);
		dragon[6] = new enemy("enemy.png", walls, 448, 320, 400, 55, 54, 1);
		dragon[7] = new enemy("enemy.png", walls, 448, 960, 400, 55, 54, 1);
		//////////////////////////////////////////////////////////////////////////////

		/////////////////////////////////////////////////////////////////////////////


		while (true) {
			if (EZInteraction.wasMouseLeftButtonPressed()) {
				gameSwitch++;
			}
			
			if (gameSwitch == -1) {
				GameMusic.play();
				gameSwitch++;
			}

			if (gameSwitch == 1) {
				intro.hide();
				Title.hide();
				directions.show();
				directions.pullToFront();
			}

			if (gameSwitch == 2) {
				directions.hide();
				gameActive = true;
			}
			
			EZ.refreshScreen();
			
			while (gameActive) {// activates real ingame functions

				/////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// element movement and game startup functions
				sorc.go();// allows the sorcerer and potions to begin the movement functions based on
							// written commands
				pPot.go();
				rPot.go();
				gPot.go();


				for (int i = 0; i < 4; i++) { // shuffles through first half of dragon array giving them commands
					dragon[i].go(sorc.x, sorc.y, 320, 200); // to stay within their bounds and hunt the sorcerer if he
															// enters the area
				}

				dragon[4].patrolVert();// sets up patrol dragons
				dragon[5].patrolVert();
				dragon[6].patrolHori();
				dragon[7].patrolHori();

				sorc.HPBar();// updates hp of the sorcerer
				////////////////////////////////////////////////////////////////////////////////////////////////////////////

				/////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// potion management

				if (pPot.isInside(sorc.x, sorc.y)) {						//sets conditons for catching the purple potion and also affects the collection bar
					pPot.collect();
					bars[potNum] = EZ.addImage("bar.png", pBarX, pBarY);
					pBarY -= 30;
					potNum++;
					pPotNum++;
					hpCollection++;
				}
				if (pPot.caught) {
					pPot.respawn();
				}

				if (rPot.isInside(sorc.x, sorc.y)) {						//sets conditons for catching the red potion and also affects the collection bar
					rPot.collect();
					bars[potNum] = EZ.addImage("bar.png", rBarX, rBarY);
					rBarY -= 30;
					potNum++;
					rPotNum++;
					hpCollection++;
				}
				if (rPot.caught) {
					rPot.respawn();
				}

				if (gPot.isInside(sorc.x, sorc.y)) {						//sets conditons for catching the green potion and also affects the collection bar
					gPot.collect();
					bars[potNum] = EZ.addImage("bar.png", gBarX, gBarY);
					gBarY -= 30;
					potNum++;
					gPotNum++;
					hpCollection++;
				}
				if (gPot.caught) {
					gPot.respawn();
				}
				//////////////////////////////////////////////////////////////////////////////////////////////////////

				//////////////////////////////////////////////////////////////////////////////////////////////////////
				// HP management

				if (sorc.hp < 600) {						//sets condition for hp gain only when sorcerer has actually lose hp
					if (hpCollection == 2) {				
						sorc.hp += 100;
						hpCollection = 0;
					}
				}

				for (int i = 0; i < 8; i++) {				//sets condition for hp loss
					if (dragon[i].isInside(sorc.x, sorc.y)) {
						sorc.hp -= 5;
					}
				}

				////////////////////////////////////////////////////////////////////////////////////////////////////////

				////////////////////////////////////////////////////////////////////////////////////////////////////////
				// tree evolution functions

				if (pPotNum == 5) {// if player fills purple potion bar (5 potions), allows the player to change
									// the image once to grow the tree to a different form
					if (EZInteraction.wasKeyPressed('z')) {
						myTree.processStates();
						buttonPressed++;
						pPotNum = 0;
					}
				}

				if (rPotNum == 5) {// if player fills red potion bar (5 potions), allows the player to change the
									// image once to grow the tree to a different form
					if (EZInteraction.wasKeyPressed('x')) {
						myTree.processStates();
						buttonPressed++;
						rPotNum = 0;
					}
				}

				if (gPotNum == 5) {// if player fills green potion bar (5 potions), allows the player to change the
									// image once to grow the tree to a different form
					if (EZInteraction.wasKeyPressed('c')) {
						myTree.processStates();
						buttonPressed++;
						gPotNum = 0;
					}
				}
				/////////////////////////////////////////////////////////////////////////////////////////////////////
				
				
				/////////////////////////////////////////////////////////////////////////////////////////////////////
				// win conditions and loss conditions
				if (buttonPressed >= 3) {							//sets condition for when all potions are activated
					for (int i = 0; i < 8; i++) {					//hides all dragons
						dragon[i].Defeat();
					}
					sorc.hp = 100000;								//sets hp to 100000 in case the sorcerer finishes the game on top of a dragon
					
 					myTree.hideTree();								//hides original tree
					fTree.go();										//shows final tree
					cont.show();
					
					if (EZInteraction.wasMouseLeftButtonPressed()) {//waits for mouse to be pressed before showing end screen
						fTree.hide();
						end.show();
						end.pullToFront();
						
						if(musicQ == 0) {							//allows music to play just once
						GameMusic.stop();
						Uta.play();
						musicQ++;
					}
					}
				}

				if (sorc.hp <= 0) {									//sets condition for when sorcerer dies
					
					
					gameOver.show();								//shows defeat screen
					
					
					myTree.hideTree();								//hides original tree

					for (int i = 0; i < 8; i++) {					//hides dragons
						dragon[i].Defeat();
					}
					
					rPot.Defeat();									//hides potions
					pPot.Defeat();
					gPot.Defeat();
					
					if (EZInteraction.wasMouseLeftButtonPressed()) {//waits for mouse to be pressed to move to next screen
						fTree.hide();
						end.show();
						end.pullToFront();
						
						if(musicQ == 0) {
							GameMusic.stop();						//stops game music and allows the new end screen music to play
							Uta.play();
							musicQ++;
						}
					}
				}
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

				EZ.refreshScreen();
			}
		}

	}
}
	
